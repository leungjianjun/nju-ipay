========================================================
https配置与项目本身无关，需要配置服务器容器等环境才能使用https服务
=============================================================
windows下进行如下配置：
1.	创建证书 
需要安装JDK1.4以上版本并配置JAVA_HOME和PATH环境变量。 

切换到命令窗口，并切换到某个目录下（比如C:\） 
1)生成密钥 
keytool -genkey -alias tomcat -keyalg RSA -keypass changeit -storepass changeit -keystore server.keystore -validity 3600 
在交互命令行中，第一项“您的名字与姓氏是什么？”需要填写服务器域名（本机用localhost） 

2)导出证书 
keytool -export -trustcacerts -alias tomcat -file server.cer -keystore  server.keystore -storepass changeit

3)加入JDK受信任库 
keytool -import -trustcacerts -alias tomcat -file server.cer -keystore  %JAVA_HOME%/jre/lib/security/cacerts -storepass changeit 

还有两个辅助命令，如果需要的时候再使用： 
查看受信任库内容 
keytool -list -keystore %JAVA_HOME%/jre/lib/security/cacerts 

从受信任库中删除 
keytool -delete -trustcacerts -alias tomcat  -keystore  %JAVA_HOME%/jre/lib/security/cacerts -storepass changeit 
2.修改Tomcat配置 
在%TOMCAT_HOME%/conf/server.xml中找到Connector配置群，增加一项 
<Connector protocol="org.apache.coyote.http11.Http11NioProtocol"   
           port="8443" minSpareThreads="5" maxSpareThreads="75"   
           enableLookups="true" disableUploadTimeout="true"     
           acceptCount="100"  maxThreads="200"   
           scheme="https" secure="true" SSLEnabled="true"   
           clientAuth="false" sslProtocol="TLS"   
           keystoreFile="C:/server.keystore"     
           keystorePass="changeit"/> 
其中keystoreFile配置为密钥库所在路径，keystorePass配置为密钥库文件保护密码。 
3.验证访问 
重启Tomcat，在浏览器中访问配置好的Web应用，如果弹出“证书错误”页面，选“继续浏览”即可，不影响使用。 
==================================================
注意：
1、配置成功后运行一下tomcat主页https://localhost:8443验证配置是否成功
2、tomcat配置成功后，在eclipse运行服务器也是不能使用https，要在 workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp1\conf
修改server.xml才能使用
3、正式的http端口是80，https端口是443，现在系统下要用管理权限才能打开这些端口，所以测试阶段的http端口是8080，https端口是8443
4、证书需要专门的认证机构认证或者颁发，需要money，所以现在用的是未经认证的自己生成的证书





