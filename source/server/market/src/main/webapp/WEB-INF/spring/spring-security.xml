<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:s="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">

	<description>SpringSecurity安全配置</description>
	
	<!-- http安全配置 -->
	<s:http auto-config="false" use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">
		<s:custom-filter position="FORM_LOGIN_FILTER" ref="authenticationFilter" />
		
		<s:intercept-url pattern="/login" requires-channel="https"/>
		<s:intercept-url pattern="/j_spring_security_check" requires-channel="https"/>
		
		<s:intercept-url pattern="/client/**" access="hasAnyRole('ROLE_client')"/>
		<s:intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_admin')"/>
		<s:intercept-url pattern="/market/**" access="hasAnyRole('ROLE_market')"/>
		
		<s:intercept-url pattern="/resources/**" filters="none" />
		<s:logout logout-success-url="/login" />
		
   <!-- <s:session-management>
			<s:concurrency-control max-sessions="1" />
		</s:session-management>
		<s:session-management invalid-session-url="/sessionTimeout" /> -->
	</s:http>
	
	<!-- 认证配置, 使用userDetailsService提供的用户信息 -->
	<s:authentication-manager alias="authenticationManager">
		<s:authentication-provider user-service-ref="userDetailsService">
			<s:password-encoder hash="sha">
    			<s:salt-source user-property="username"/>
  			</s:password-encoder>
		</s:authentication-provider>
	</s:authentication-manager>

	<!-- 项目实现的用户查询服务 -->
	<bean id="userDetailsService" class="com.ipay.server.security.UserDetailsServiceImpl" />
	
	<!-- 自定义ajax和form双向登录支持 -->
	<bean id="authenticationProcessingFilterEntryPoint"
           class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
    	<property name="loginFormUrl" value="/login" />
    	<property name="forceHttps" value="false" />
	</bean>

	<bean id="authenticationFilter" class="com.ipay.server.security.AjaxUsernamePasswordAuthenticationFilter">
    	<property name="authenticationManager" ref="authenticationManager"/>
    	<property name="filterProcessesUrl" value="/j_spring_security_check"/>
    	<property name="authenticationFailureHandler" ref="failureHandler"/>
    	<property name="authenticationSuccessHandler" ref="successHandler"/>
	</bean>

	<bean id="successHandler" class="com.ipay.server.security.AjaxAuthenticationSuccessHandler">
    	<property name="defaultTargetUrl" value="/"/>
	</bean>
	<bean id="failureHandler" class="com.ipay.server.security.AjaxAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login"/>
	</bean>
	<context:component-scan base-package="com.ipay.server.dao" />
	
</beans>